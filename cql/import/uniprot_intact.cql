// UniProt Protein-Protein Interaction Import Script for Neo4j v5
// This script imports interaction data from IntAct and creates INTERACTS_WITH
// relationships between existing UniProt nodes.

// ================================
// This CQL script was generated by  Gemini CLI processing the uniprot_intact_import_prompt.txt file
// Some manual adjustments were made to ensure compatibility with Neo4j v5 and the specific data model.

// The large intact.tsv file is available from the IntAct FTP site: https://www.ebi.ac.uk/intact/download/ftp/intact.zip
// This file expands to 7.89 GB and contains interaction data for multiple species.
// For this script, we focus on human UniProt interactions, so the following shell commands generate a smaller TSV file:
// 
// head -1 intact.tsv > output.tsv
//grep ^uniprotkb intact.tsv >> output.tsv
// grep human output.tsv > uniprot_9606_intact.tsv
// cut -f1,2 uniprot_9606_intact.tsv > uniprot_9606_intact_cut.tsv 
// mv uniprot_9606_intact_cut.tsv uniprot_9606_intact.tsv

// ================================
// STEP 1: Import Interactions
// ================================
// Load data from the TSV file. For each row, match the two UniProt nodes
// and create a single, non-reciprocal INTERACTS_WITH relationship.
LOAD CSV WITH HEADERS FROM 'file:///intact/uniprot_9606_intact.tsv' AS row FIELDTERMINATOR '\t'
CALL (row){
    // Clean the prefix from the interactor IDs
    WITH replace(row."#ID(s) interactor A", 'uniprotkb:', '') AS entryA,
         replace(row."ID(s) interactor B", 'uniprotkb:', '') AS entryB

    // Match the two existing UniProt nodes
    MATCH (u1:UniProt {Entry: entryA})
    MATCH (u2:UniProt {Entry: entryB})

    // Ensure relationships are created in one direction only by comparing internal IDs.
    // This prevents duplicate relationships for pairs that appear in reversed order.
    WHERE id(u1) < id(u2)

    // Create the interaction relationship if it doesn't already exist
    MERGE (u1)-[:INTERACTS_WITH]->(u2)
} IN TRANSACTIONS OF 1000 ROWS;

// ================================
// STEP 2: Verification Queries
// ================================
// Count the total number of INTERACTS_WITH relationships created.
MATCH ()-[r:INTERACTS_WITH]->()
RETURN count(r) AS totalInteractions;

// Sample a few interaction relationships to verify the import.
MATCH (u1:UniProt)-[:INTERACTS_WITH]->(u2:UniProt)
RETURN u1.Entry AS UniProt1, u2.Entry AS UniProt2
LIMIT 10;

// Verify that no reciprocal relationships were created.
// This query should return 0 if the import was successful.
MATCH (u1:UniProt)-[:INTERACTS_WITH]->(u2:UniProt)
WHERE (u2)-[:INTERACTS_WITH]->(u1)
RETURN count(*) AS reciprocalRelationships;

// ================================
// SCRIPT COMPLETION MESSAGE
// ================================
RETURN "UniProt interaction import script completed successfully. Verify results using the queries above." AS status;
