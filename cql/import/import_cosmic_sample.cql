// Cypher script to process the COSMIC Sample TSV file and import the data into a local Neo4j v5 database
// Each row in the TSV file will be used to create a  new COSMIC_Individual row, a new COSMIC_Tumour node,
//and a new COSMIC_Sample node. The COSMICIndividual node will be linked to the COSMIC_Tumour node,
// and the COSMIC_Tumour node will be linked to the COSMIC_Sample node
// The TSV file is located at: /Volumes/SSD870/COSMIC_rel102/Import/Cosmic_Sample_v102_GRCh38.tsv
// The first line in this file consist of column headings.
// The Cypher structure was generated by Antripic Claude
// Please note that since the origin of these data is from the Sanger Institute, UK, the spelling is British English

// ================================
// STEP 1: Create Indexes and Constraint
CREATE CONSTRAINT IF NOT EXISTS FOR (s:COSMIC_Sample) REQUIRE s.COSMIC_SAMPLE_ID IS UNIQUE;
CREATE INDEX patient_id_index FOR (p:COSMIC_Patient) ON (p.Patient_ID);
CREATE INDEX tumour_id_index FOR (t:COSMIC_Tumour) ON (t.Tumour_ID);
CREATE INDEX sample_id_index FOR (s:COSMIC_Sample) ON (s.Sample_ID);
// ================================
// STEP 2: Clean Existing Data
// ================================
// ================================
// STEP 2: Clean Individual Data
// ================================
// Detach and delete all existing COSMIC_Individual nodes in batches.
MATCH (i:COSMIC_Individual)
CALL (i){
    DETACH DELETE i
} IN TRANSACTIONS OF 1000 ROWS;

// Detach and delete all existing COSMIC_Tumour nodes in batches.
MATCH (i:COSMIC_Tumour)
CALL (i){
    DETACH DELETE i
} IN TRANSACTIONS OF 1000 ROWS;

// Detach and delete all existing COSMIC_Sample nodes in batches.
MATCH (i:COSMIC_Sample)
CALL (i){
    DETACH DELETE i
} IN TRANSACTIONS OF 1000 ROWS;

// process each row in the TSV file to create the nodes and relationships
LOAD CSV WITH HEADERS FROM 'file:///Volumes/SSD870/COSMIC_rel102/Import/Cosmic_Sample_v102_GRCh38.tsv' AS row FIELDTERMINATOR '\t'

// Process each row to create nodes and relationships
CALL(row) {
    // Create the COSMIC_Individual node
    MERGE (i:COSMIC_Individual {INDIVIDUAL_ID: row.INDIVIDUAL_ID})
    ON CREATE SET 
        i.GENDER = row.GENDER,
        i.AGE = toInteger(row.AGE),
        i.ETHNICITY = row.ETHNICITY,
        i.ENVIRONMENTAL_VARIABLES = row.ENVIRONMENTAL_VARIABLES,
        i.THERAPY = row.THERAPY,
        i.FAMILY = row.FAMILY,
        i.INDIVIDUAL_REMARK = row.INDIVIDUAL_REMARK
    
    // Create the COSMIC_Tumour node
    MERGE (t:COSMIC_Tumour {TUMOUR_ID: row.TUMOUR_ID})
    ON CREATE SET
        t.INDIVIDUAL_ID = row.INDIVIDUAL_ID,
        t.TUMOUR_SOURCE = row.TUMOUR_SOURCE,
        t.NORMAL_TISSUE_TESTED = row.NORMAL_TISSUE_TESTED,
        t.AGE_AT_TUMOUR_RECURRENCE = toInteger(row.AGE_AT_TUMOUR_RECURRENCE),
        t.THERAPY_RELATIONSHIP = row.THERAPY_RELATIONSHIP,
        t.MUTATION_ALLELE_SPECIFICATION = row.MUTATION_ALLELE_SPECIFICATION,
        t.DRUG_RESPONSE = row.DRUG_RESPONSE,
        t.COSMIC_PHENOTYPE_ID = row.COSMIC_PHENOTYPE_ID,
        t.GRADE = row.GRADE,
        t.STAGE = row.STAGE,
        t.CYTOGENETICS = row.CYTOGENETICS,
        t.METASTATIC_SITE = row.METASTATIC_SITE,
        t.GERMLINE_MUTATION = row.GERMLINE_MUTATION,
        t.THERAPY = row.THERAPY

    // Create the COSMIC_Sample node
    MERGE (s:COSMIC_Sample {COSMIC_SAMPLE_ID: row.COSMIC_SAMPLE_ID})
    ON CREATE SET
        s.SAMPLE_NAME = row.SAMPLE_NAME,
        s.TUMOUR_ID = row.TUMOUR_ID,
       // s.COSMIC_PHENOTYPE_ID = row.COSMIC_PHENOTYPE_ID,
        s.SAMPLE_TYPE = row.SAMPLE_TYPE,
        s.WHOLE_GENOME_SCREEN = row.WHOLE_GENOME_SCREEN,
        s.WHOLE_EXOME_SCREEN = row.WHOLE_EXOME_SCREEN,
        s.TARGETED_SCREEN = row.TARGETED_SCREEN,
        s.RNASEQ_SCREEN = row.RNASEQ_SCREEN,
        s.REARRANGEMENT_SCREEN = row.REARRANGEMENT_SCREEN,
        s.NORMAL_TISSUE_TESTED = row.NORMAL_TISSUE_TESTED,
        s.SAMPLE_DIFFERENTIATOR = row.SAMPLE_DIFFERENTIATOR,
        s.MUTATION_ALLELE_SPECIFICATION = row.MUTATION_ALLELE_SPECIFICATION,
        s.MSI = row.MSI,
        s.AVERAGE_PLOIDY = toFloat(row.AVERAGE_PLOIDY),
        s.SAMPLE_REMARK = row.SAMPLE_REMARK,
        s.DRUG_RESPONSE = row.DRUG_RESPONSE,
        s.GERMLINE_MUTATION = row.GERMLINE_MUTATION,
        s.THERAPY = row.THERAPY

    // Create relationships between the nodes
    WHERE row.COSMIC_PHENOTYPE_ID IS NOT null
        MERGE (c:COSMIC_CLASSIFICATION) WHERE (c.COSMIC_PHENOTYPE_ID) = t.COSMIC_PHENOTYPE_ID
        MERGE  (t)-[:HAS_PHENOTYPE]->(c)

    MERGE (i)-[:HAS_TUMOUR]->(t)
    MERGE (t)-[:HAS_SAMPLE]->(s)



} IN TRANSACTIONS OF 1000 ROWS;


